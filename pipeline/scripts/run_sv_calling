#!/bin/bash

tools_dir=$1 && shift
tumor_id=$1 && shift
tumor_bam=$1 && shift
reference_id=$1 && shift
reference_bam=$1 && shift
output_dir=$1 && shift
esvee_vcf=$1 && shift
ref_genome_version=$1 && shift
ref_genome=$1 && shift
sv_blacklist_bed=$1 && shift
known_hotspot_file=$1 && shift
pon_sv_file=$1 && shift
pon_sgl_file=$1 && shift
repeat_mask_file=$1 && shift
target_regions_bed=$1 && shift
threads=$1 && shift
max_memory=$1 && shift

if [[ ! -d "${output_dir}" ]]; then
  mkdir ${output_dir}
fi

if [[ -f "${esvee_vcf}" ]]; then
  echo "Skipping Esvee for ${tumor_id}, since VCF ${gridss_vcf} exists"
  exit
fi

esvee_jar=${tools_dir}/esvee.jar
sambamba=${tools_dir}/sambamba

if [ "${reference_id}" != "none" ]; then
  samples_arg="${reference_id},${tumor_id}"
  bams_arg="${reference_bam},${tumor_bam}"
else
  samples_arg="${tumor_id}"
  bams_arg="${tumor_bam}"
fi


# run Prep
args="-sample ${samples_arg} \
  -bam_file ${bams_arg} \
  -ref_genome ${ref_genome} \
  -ref_genome_version ${ref_genome_version} \
  -blacklist_bed ${sv_blacklist_bed} \
  -known_fusion_bed ${known_fusion_bed} \
  -bamtool ${sambamba} \
  -output_dir ${output_dir} \
  -threads ${threads}"

echo "Running Prep on tumor with args: ${args}"

java -Xmx${max_memory}G -cp ${esvee_jar} com.hartwig.hmftools.esvee.prep.PrepApplication ${args}

#echo ${args}
#java -jar ${sv_prep_jar} ${args}

sv_prep_tumor_bam=${output_dir}/${tumor_id}.esvee.prep.bam

if [ "${reference_id}" != "none" ]; then
  sv_prep_ref_bam=${output_dir}/${reference_id}.esvee.prep.bam
fi

junction_file=${output_dir}/${tumor_id}.esvee.junction.tsv

# run Assembly
args="-tumor ${tumor_id} \
  -tumor_bam ${tumor_bam} \
  -junction_file ${junction_file} \
  -ref_genome ${ref_genome} \
  -ref_genome_version ${ref_genome_version} \
  -write_types 'JUNC_ASSEMBLY;PHASED_ASSEMBLY;ALIGNMENTS;BREAKEND;VCF' \
  -output_dir ${output_dir} \
  -threads ${threads}"

if [ "${reference_id}" != "none" ]; then
  args="${args} -reference ${reference_id}
    -reference_bam ${reference_bam}"
fi

echo "Running Assembly on tumor with args: ${args}"

java -Xmx${max_memory}G -cp ${esvee_jar} com.hartwig.hmftools.esvee.assembly.AssemblyApplication ${args}


# annotate with reference depth
esvee_raw_vcf=${output_dir}/${tumor_id}.esvee.raw.vcf.gz
esvee_ref_depth_vcf=${output_dir}/${tumor_id}.esvee.ref_depth.vcf.gz

args="-input_vcf ${esvee_raw_vcf} \
  -output_vcf ${esvee_ref_depth_vcf} \
  -sample ${samples_arg} \
  -bam_file ${bams_arg} \
  -ref_genome ${ref_genome} \
  -ref_genome_version ${ref_genome_version} \
  -threads ${threads}"

echo "Running Reference Depth annotation with args: ${args}"

java -Xmx${max_memory}G -cp ${sv_prep_jar} com.hartwig.hmftools.esvee.depth.DepthAnnotator ${args}


# run Calling
args="-input_vcf ${esvee_ref_depth_vcf} \
  -sample ${tumor_id} \
  -ref_genome_version ${ref_genome_version} \
  -known_hotspot_file ${known_hotspot_file} \
  -pon_sv_file ${pon_sv_file} \
  -pon_sgl_file ${pon_sgl_file} \
  -repeat_mask_file ${repeat_mask_file} \
  -output_dir ${output_dir}"

if [ "${reference_id}" != "none" ]; then
  args="${args} -reference ${reference_id}"
fi

if [ "${run_mode}" == "PANEL" ]; then
  args="${args} -target_regions_bed ${target_regions_bed}"
fi

echo "Running Calling and filtering with args: ${args}"

java -Xmx${max_memory}G -cp ${esvee_jar} com.hartwig.hmftools.esvee.caller.CallerApplication ${args}


